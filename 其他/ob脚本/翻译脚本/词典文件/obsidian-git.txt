Automatic
自动

Split timers for automatic commit and sync Enable to use one interval for commit and another for sync.
自动提交和同步的分割计时器 启用一个提交间隔和另一个同步间隔。

Auto commit-and-sync interval (minutes)
自动提交和同步间隔（分钟）

Commit and sync changes every X minutes. Set to 0 (default) to disable. (See below settings for further configuration)
每隔 X 分钟提交并同步更改。设置为 0（默认）禁用。（更多配置见下文）

Auto commit-and-sync after stopping file edits
停止文件编辑后自动提交和同步

Requires the commit-and-sync interval not to be 0. If turned on, do auto commit-and-sync every 0 minutes after stopping file edits. This also prevents auto commit-and-sync while editing a file. If turned off, it’s independent from the setting.
需要“提交和同步间隔”不为 0。如果启用，在停止编辑文件 0 分钟后自动提交并同步。此选项还能避免在编辑文件时自动提交和同步。如果关闭，则与该设置无关。

Auto commit-and-sync after latest commit
最近一次提交后自动提交和同步

If turned on, will set last auto commit-and-sync timestamp to the latest commit timestamp. This reduces the frequency of auto commit-and-sync when doing manual commits.
如果启用，将自动提交和同步的最后时间戳更新为最近一次提交的时间戳。这能在手动提交时减少自动提交和同步的频率。

Auto push interval (minutes)
自动推送间隔（分钟）

Push changes every X minutes. Set to 0 (default) to disable.
每隔 X 分钟推送更改。设置为 0（默认）禁用。

Auto pull interval (minutes)
自动拉取间隔（分钟）

Pull changes every X minutes. Set to 0 (default) to disable.
每隔 X 分钟拉取更改。设置为 0（默认）禁用。

Auto commit-and-sync only staged files
仅提交和同步已暂存文件

If turned on, only staged files are committed on commit-and-sync. If turned off, all changed files are committed.
如果启用，仅提交已暂存文件；如果关闭，则提交所有更改的文件。

Specify custom commit message on auto commit-and-sync
自动提交和同步时使用自定义提交信息

You will get a popup to specify your message.
将会弹出窗口让你填写提交信息。

Commit message on auto commit-and-sync Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).
自动提交和同步时的提交信息 可用占位符：{{date}}（见下文）、{{hostname}}（见下文）、{{numFiles}}（提交中更改的文件数）、{{files}}（提交信息中的文件列表）。

Commit message on manual commit Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in commit) and {{files}} (changed files in commit message).
手动提交时的提交信息 可用占位符：{{date}}（见下文）、{{hostname}}（见下文）、{{numFiles}}（提交中更改的文件数）、{{files}}（提交信息中的文件列表）。

Commit message script
提交信息脚本

Script path for a custom script to generate a commit message. May be used to generate commit messages using advanced placeholders: {{hostname}}, {{date}}.
用于生成提交信息的自定义脚本路径。可使用高级占位符：{{hostname}}、{{date}}。

Specify placeholder format Specify custom date format. E.g. “YYYY-MM-DD HH\:mm\:ss”. See Moment.js for more formats.
指定占位符格式 自定义日期格式。例如 “YYYY-MM-DD HH\:mm\:ss”。更多格式请参考 Moment.js。

{{hostname}} placeholder replacement Specify custom hostname for every device.
{{hostname}} 占位符替换 为每台设备指定自定义主机名。

Preview commit message
预览提交信息

List filenames affected by commit in the commit body
在提交正文中列出受影响的文件名

Pull
拉取

Merge strategy Decide how to integrate commits from your remote branch into your local branch.
合并策略 决定如何将远程分支的提交集成到本地分支。

Pull on startup
启动时拉取

Automatically pull commits from Obsidian starts.
Obsidian 启动时自动拉取提交。

Commit-and-sync Commit-and-sync using default settings means staging everything -> committing -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.
提交并同步 使用默认设置时，提交并同步包括 暂存所有更改 -> 提交 -> 推送。理想情况下，这是保持本地和远程仓库同步的一个常规动作。

Push on commit-and-sync Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit and pull only. It will still be called commit-and-sync.
提交并同步时推送 大多数情况下你会在提交后推送。关闭此选项后，“提交并同步”只会执行提交和拉取，但名称仍为“提交并同步”。

Pull on commit-and-sync On commit-and-sync, pull commits as well. Turning this off turns a commit-and-sync action into commit and push only.
提交并同步时拉取 在提交并同步时同时拉取提交。关闭此选项后，“提交并同步”只会执行提交和推送。

Line author information
逐行作者信息

Show commit authoring information next to each line
在每行旁显示提交作者信息

History view
历史视图

Show Author
显示作者

Show the author of the commit in the history view. The {{date}} placeholder format is used to display the date.
在历史视图中显示提交作者。日期显示使用 {{date}} 占位符格式。

Show Date
显示日期

Source control view
源代码控制视图

Automatically refresh source control view on file changes On slower machines this may cause lags. If so, disable this option.
文件更改时自动刷新源代码控制视图 在性能较慢的设备上可能导致卡顿，如遇此情况请禁用。

Source control view refresh interval Milliseconds to wait after file change before refreshing the Source Control View.
源代码控制视图刷新间隔 文件更改后刷新视图前的等待时间（毫秒）。

Miscellaneous
杂项

Diff view style Set the style for the diff view. Note that the actual diff in “Split” mode is not generated by Git, but the editor itself instead. It may differ from the diff generated by Git. One advantage of this is that you can edit the text in that view.
差异视图样式 设置差异视图的样式。注意：“拆分”模式下的差异不是 Git 生成的，而是编辑器自身生成的，可能与 Git 的结果不同。其优点是你可以直接在该视图中编辑文本。

Disable informative notifications Disable informative notifications for git operations to minimize distraction (refer to status bar for updates).
禁用提示通知 禁用 Git 操作的提示通知以减少干扰（可在状态栏查看更新）。

Disable error notifications Disable error notifications of any kind to minimize distraction (refer to status bar for updates).
禁用错误通知 禁用所有错误通知以减少干扰（可在状态栏查看更新）。

Hide notifications for no changes Don’t show notifications when there are no changes to commit or push.
隐藏无更改通知 当没有需要提交或推送的更改时不显示通知。

Show status bar Obsidian must be restarted for the changes to take effect.
显示状态栏 更改需要重启 Obsidian 才能生效。

File menu integration Add “Stage”, “Unstage” and “Add to .gitignore” actions to the file menu.
文件菜单集成 在文件菜单中添加“暂存”、“取消暂存”和“添加到 .gitignore”操作。

Show branch status bar Obsidian must be restarted for the changes to take effect.
显示分支状态栏 更改需要重启 Obsidian 才能生效。

Show the count of modified files in the status bar
在状态栏显示已修改文件数

Author name for commit
提交作者姓名

Author email for commit
提交作者邮箱

Advanced
高级

Update submodules “Commit-and-sync” and “Pull” take care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.
更新子模块 “提交并同步”和“拉取”会处理子模块。缺少功能：冲突文件、拉取/推送/提交的文件计数。每个子模块需要设置跟踪分支。

Custom Git binary path
自定义 Git 可执行文件路径

Additional environment variables Use each line for a new environment variable in the format KEY=VALUE.
额外环境变量 每行输入一个环境变量，格式为 KEY=VALUE。

Additional PATH environment variable paths Use each line for one PATH.
额外 PATH 环境变量路径 每行输入一个 PATH。

Reload with new environment variables Reloading previously added environment variables will not take effect until Obsidian is restarted.
重新加载新环境变量 重新加载的环境变量需要重启 Obsidian 才会生效。

Custom base path (Git repository path) Specify the relative path to the vault from which the Git binary should be discovered. Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root. Use “.” instead of “./” on Windows.
自定义基础路径（Git 仓库路径） 指定相对于仓库根目录的路径，用于定位 Git 可执行文件。主要用于 Git 仓库位于仓库根目录下时的路径设置。在 Windows 上用 “.” 替代 “./”。

Custom Git directory path (instead of “.git”) Requires restart of Obsidian to take effect. Use “.” instead of “./” on Windows.
自定义 Git 目录路径（替代 “.git”） 需要重启 Obsidian 才能生效。在 Windows 上用 “.” 替代 “./”。

Disable on this device Disables the plugin on this device. This setting is not synced.
在此设备禁用 禁用此设备上的插件，该设置不会同步。

Support
支持

Donate If you like this Plugin, consider donating to support continued development.
捐赠 如果你喜欢这个插件，可以通过捐赠支持持续开发。

Copy Debug Information
复制调试信息

Debugging and logging: You can always see the logs of this and every other plugin by opening the console with CMD (⌘) + OPTION (⌥) + I
调试与日志：你可以随时通过 CMD (⌘) + OPTION (⌥) + I 打开控制台查看本插件及其他插件的日志。
